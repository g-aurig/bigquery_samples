-- Creating a Common Table Expression (CTE) named promotion_clicks
-- This CTE calculates the number of clicks for each promotion_name where the event_name is 'select_promotion'
WITH promotion_clicks AS (
  SELECT
    promotion_name,
    COUNTIF(event_name = 'select_promotion') AS clicks
  FROM
    `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events*`,
    UNNEST(items) AS items
  WHERE
    event_name = 'select_promotion'
  GROUP BY
    promotion_name
),
-- Creating another CTE named promotion_purchases
-- This CTE calculates the number of purchases for each promotion_name where the event_name is 'purchase'
promotion_purchases AS (
  SELECT
    promotion_name,
    COUNTIF(event_name = 'purchase') AS purchases
  FROM
    `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events*`,
    UNNEST(items) AS items
  WHERE
    event_name = 'purchase'
  GROUP BY
    promotion_name
),
-- Creating a third CTE named promotion_ctr
-- This CTE combines the results from the previous CTEs (promotion_clicks and promotion_purchases) to calculate the click-through rate (CTR) for each promotion_name
promotion_ctr AS (
  SELECT
    p.promotion_name,
    p.clicks,
    u.purchases,
    round(SAFE_DIVIDE(u.purchases, p.clicks),2) AS ctr
  FROM
    promotion_clicks AS p
  JOIN
    promotion_purchases AS u
  ON
    p.promotion_name = u.promotion_name
)
-- The final SELECT statement retrieves data from the promotion_ctr CTE
-- It filters out the promotion_names with values 'Not available in demo dataset' and '' (empty string) to maintain a clean appearance
-- Then, it orders the results by CTR in descending order
SELECT
  promotion_name,
  clicks,
  purchases,
  ctr
FROM
  promotion_ctr
  WHERE 
  promotion_name <> 'Not available in demo dataset' and promotion_name <> ''
  order by
  ctr desc
